Boyd’s law of iteration: Speed of iteration beats the quality of iteration

It was some time around the 1950s when Colonel John Boyd, an accomplished fighter pilot and strategist, got himself obsessed with an ‘anomaly’ pertaining to the comparative performance of two fighter jets of that era- F-86s and Mig-15s.

Having indulged in dogfights on both of those jets, he knew both of them very well. Based on their features, one would say- Mig-15 would get the better of F-86 on most grounds.

It could climb better, it could turn faster, it had better distance visibility. While F-86 was better than Mig-15 in only two major aspects.

First, F-86 had better side distance visibility while Mig-15 pilot could see further in front only. Second, F-86 had a hydraulic control while Mig-15 had a manual control.

According to the common conviction among fighter pilots of that era, the maneuverability of the jet was considered to be a decisive component in a dogfight. If one would go about that, Mig-15 clearly seems to outmanoeuvre F-86. But fighter pilots always chose F-86 instead.

This was because statistically, the F-86 had a better chance of winning than the MiG-15.

Out of 10 one-to-one dogfights between F-86 and Mig-15, F-86 had won 9 of them.

Being totally perplexed by such an anomaly, Boyd came up with a theory about this.

Mig-15 was better at OOPA operations (observing, orienting, planning and acting) than the F-86 but because of the presence of hydraulic flight control in the latter, F-86 was faster at them.

With a manual control system, the pilot would fatigue more over the iterations. Therefore, despite its speed, Mig-15 gets outperformed by an inferior jet with faster controls.

At this, Boyd proposed that being ‘faster’ at OOPA is the primary determinant of winning a dogfight rather than being ‘better’ at it. That is, how fast one could iterate through the operations. Hence the law- “Speed of iteration beats the quality of iteration.”

This law is fairly replicable to practically any discipline. But having been involved in research work for some time now, I’m particularly motivated about its applicability in project management.

Any project can be refactored for the discovery of OOPA iterations. And with iteration quality and speed tuned just right, one can be as productive as never before!

Tl;dr: When in doubt, iterate faster.
